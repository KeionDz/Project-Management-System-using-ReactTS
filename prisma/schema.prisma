
generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(USER)        // ✅ Default user role
  avatarUrl String?                        // ✅ Optional avatar URL for user
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}


model Project {
  id          String   @id @default(cuid())
  name        String
  description String?                         // ✅ Make optional
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt             // ✅ Add updatedAt for consistency
  tasks       Task[]
  statuses    StatusColumn[]

}

model StatusColumn {
  id        String   @id @default(cuid())
  name      String
  order     Int       // Column position in the board
  color     String?   // ✅ Hex or Tailwind color for the column
  projectId String
  project   Project   @relation(fields: [projectId], references: [id])
  tasks     Task[]
}


model Task {
  id          String   @id @default(cuid())
  title       String
  description String?
  priority    String   // "low" | "medium" | "high"
  dueDate     DateTime?
  tags        String[] @default([]) // Postgres array for tags
  assignee    String
  githubLink  String?

  order     Int
  statusId  String
  status    StatusColumn @relation(fields: [statusId], references: [id])
  projectId String
  project   Project      @relation(fields: [projectId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
